completed:
---
is in a state that can compile


broken:
--
-should we try to enforce a continous sigma1/0 across the inner/outer
 domains?
 -does DNSgrid_Coordinates_CubSph_sigma_continuity call in reset work???
-maybe also set_DNSdata_actual_xyzmax_pars
-the lin. Eqn for Sigma cannot be solved,
 ->there is a bug in the BCs or the  PDE

oh no!!!
we have:
        h == q + 1,
        h2 == h h,
        DSigmaUp[a] == Psim4 dSigma[a],
        dSigmaUp[a] == dSigma[a],
        w[a] == Psim6 wB[a],
        wBDown[a] == wB[a],
        wDown[a] == Psim2 wBDown[a],
        L2 == h2 + (wDown[c] + dSigma[c]) (w[c] + DSigmaUp[c]),
        uzerosqr == L2/(alpha2 h2),
        uzero == sqrt[uzerosqr],
        alpha == alphaP/Psi,
        alpha2 == alpha alpha,
so we calc. alpha2 after uzerosqr !!!



started to change:
---
sgrid_DNSdata.c
DNSgrid.c
DNSdata.c
DNS_CTS.m
set_DNSdata_Sigma_BCs.m
DNS_compute_new_q_atXYZ.m
DNS_compute_new_q.m
DNS_set_dlnIntegEuler.m


still need changing:
---
all else




check:
---
in DNS_CTS.m , ...
  OmegaCrossR1 == - Omega y,
  OmegaCrossR2 == + Omega (x-xC),
  OmegaCrossR3 == 0,
  should center be off the x-axis???

in
Setting DNSdata_Sigma outside the stars only...
  are we solving a linear eqn? If so, why is res not 1e-15 after solve???

in
set_DNSdata_Sigma_BCs.m
  we set certain things again (in forallpoints loops), is this needed?

when we solve for one var only, we may be able to use the block info
mechanism to not compute some stuff for the other vars in the PDEs or BCs

Idea:
---
+change DNS_CTS.m s.t. we solve for Sigma in TOUCH boxes using the same
 PDE but with EoS that has:
 h=1, rho_0=-lam
+change set_DNSdata_Sigma_BCs.m s.t. we have BC
 DNSdata_Sigma[i] = Omega*(xc1-xCM) * y
 or
 DNSdata_Sigma[i] = Omega*(xc2-xCM) * y
 on outside of TOUCH boxes

